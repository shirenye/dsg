<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>dsg-cloud</artifactId>
        <groupId>com.dsg</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <artifactId>dsg-auth</artifactId>
    <description>认证服务</description>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <docker.image.prefix>dsg-auth</docker.image.prefix>
        <!-- docker harbor地址 -->
        <docker.repostory>192.168.48.151:9001</docker.repostory>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.dsg</groupId>
            <artifactId>dsg-common-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dsg</groupId>
            <artifactId>dsg-common-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dsg</groupId>
            <artifactId>dsg-common-datasource</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dsg</groupId>
            <artifactId>dsg-manager</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dsg</groupId>
            <artifactId>dsg-common-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- 使用Maven插件直接将应用打包为一个Docker镜像 -->
            <plugin>
                <groupId>com.spotify</groupId>
                <!-- 这里使用新版dockerfile-maven-plugin插件 -->
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.4.10</version>
                <configuration>
                    <!-- Dockerfile目录指定 -->
                    <dockerfile>Dockerfile</dockerfile>
                    <repository>${docker.repostory}/${docker.image.prefix}/${project.artifactId}</repository>
                    <!-- 生成镜像标签 如不指定 默认为latest -->
                    <tag>${project.version}</tag>
                    <buildArgs>
                        <!-- 理论上这里定义的参数可以传递到Dockerfile文件中，目前未实现 -->
                        <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
